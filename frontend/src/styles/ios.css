/**
 * iOS-specific CSS adjustments
 * This file contains CSS variables and fixes specifically for iOS devices
 */

@import './variables.css';

/* iOS-specific styles */
@supports (-webkit-touch-callout: none) {
  html, body {
    height: -webkit-fill-available;
  }
}

/* CSS variables for proper viewport height on iOS */
:root {
  --vh: 1vh; /* Will be set dynamically via JavaScript */
  --safe-area-top: env(safe-area-inset-top, 0);
  --safe-area-bottom: env(safe-area-inset-bottom, 0);
  --safe-area-left: env(safe-area-inset-left, 0);
  --safe-area-right: env(safe-area-inset-right, 0);
}

/* Use the iOS-specific vh unit for elements that need 100% height */
.full-height {
  height: 100vh; /* Fallback */
  height: calc(var(--vh, 1vh) * 100);
}

/* Specific fixes for iOS devices */
.ios-device {
  /* Prevent elastic scrolling/bounce effect at boundaries */
  overscroll-behavior: none;
  
  /* Fix for iOS Safari 100vh issue */
  .full-height {
    height: calc(var(--vh, 1vh) * 100);
  }
  
  /* Fix for input elements on iOS */
  input, textarea, select {
    -webkit-appearance: none;
    font-size: 16px !important; /* Prevent zoom on focus */
    border-radius: 6px;
  }
  
  /* Fix for position:fixed elements on iOS */
  .fixed-element, .filterToggleButton {
    position: fixed;
    transform: translateZ(0);
    -webkit-transform: translateZ(0);
  }
  
  /* Fix for buttons on iOS */
  button {
    -webkit-appearance: none;
    cursor: pointer;
    touch-action: manipulation;
  }
  
  /* Disable pull-to-refresh on iOS webview */
  body {
    overscroll-behavior-y: none;
    -webkit-overflow-scrolling: touch;
  }

  /* Fix for swipe actions on mobile cards */
  .mobileCard {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }

  .mobileCardSwipeState {
    -webkit-transform: translate3d(0, 0, 0);
    -webkit-transition: -webkit-transform 0.3s ease;
    transition: transform 0.3s ease;
  }

  .mobileCardSwipeActive .mobileCardSwipeState {
    -webkit-transform: translateX(-140px);
  }

  /* Fix for sticky headers in data tables */
  .tableContainer th {
    position: -webkit-sticky;
  }

  /* Fix for modal scrolling issues */
  .modalContent {
    -webkit-overflow-scrolling: touch;
  }

  /* Fix dropdown menus for filters */
  .modernSelectDropdown {
    -webkit-overflow-scrolling: touch;
    position: absolute;
    left: 0;
    right: 0;
  }

  /* Fix for checkboxes */
  .checkmark, .customCheckbox, .customRadio {
    -webkit-appearance: none;
    -webkit-transform: translateZ(0);
  }

  /* Garantir que o conteúdo não fique escondido atrás da navbar */
  padding-bottom: env(safe-area-inset-bottom, 0);
}

.ios-device .mobileNavbar {
  /* Forçar exibição da navbar */
  display: block !important;
  position: fixed !important;
  bottom: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: 1000 !important;
  
  /* Suporte a safe-area */
  padding-bottom: env(safe-area-inset-bottom, 0) !important;
  
  /* Forçar hardware acceleration */
  -webkit-transform: translateZ(0) !important;
  transform: translateZ(0) !important;
  -webkit-backface-visibility: hidden !important;
  backface-visibility: hidden !important;
  
  /* Garantir que a navbar fique visível */
  opacity: 1 !important;
  visibility: visible !important;
}

/* Classe específica para a navbar no iOS */
.ios-device .mobileNavbar.ios-navbar {
  display: block !important;
}

/* Ajustes para o conteúdo principal */
.ios-device main {
  padding-bottom: calc(60px + env(safe-area-inset-bottom, 0));
}

/* Ajustes para o viewport */
@supports (-webkit-touch-callout: none) {
  .ios-device {
    min-height: -webkit-fill-available;
  }
  
  .ios-device .mobileNavbar {
    position: fixed !important;
  }
  
  .ios-device .mobileNavbar.ios-navbar {
    display: block !important;
  }
  
  .ios-device main {
    padding-bottom: calc(60px + env(safe-area-inset-bottom, 0));
  }
}

/* Ajustes para o body */
.ios-device body {
  min-height: -webkit-fill-available;
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

/* Ajustes para o root */
.ios-device #root {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

/* Ajustes para o app */
.ios-device .app {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

/* Ajustes para o conteúdo principal */
.ios-device main {
  flex: 1;
  padding-bottom: calc(60px + env(safe-area-inset-bottom, 0));
}

/* Ajustes para a navbar */
.ios-device .mobileNavbar {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  background-color: #ffffff;
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
  padding-bottom: env(safe-area-inset-bottom, 0);
}

/* Ajustes para dispositivos iOS */
.ios-device .mobileNavbar.ios-navbar {
  display: block !important;
  position: fixed !important;
  bottom: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: 1000 !important;
  padding-bottom: env(safe-area-inset-bottom, 0) !important;
}

/* Special handling for notched iOS devices (iPhone X and newer) */
.ios-notched {
  /* Safe area padding for fixed headers */
  .fixed-header {
    padding-top: var(--safe-area-top);
  }
  
  /* Safe area padding for fixed footers */
  .fixed-footer, .mobileNavbar {
    padding-bottom: var(--safe-area-bottom);
  }
  
  /* Ensure content doesn't get hidden behind the notch */
  .container, .mainContainer, .pageContainer {
    padding-left: max(var(--safe-area-left), 16px);
    padding-right: max(var(--safe-area-right), 16px);
  }
  
  /* Better modal positioning for notched devices */
  .modal, .formModal {
    padding-bottom: var(--safe-area-bottom);
  }
  
  /* Fixed bottom elements should respect the home indicator area */
  .bottom-fixed {
    bottom: var(--safe-area-bottom) !important;
  }
  
  /* Adjust full height to include safe areas */
  .full-height-safe {
    height: calc((var(--vh, 1vh) * 100) - var(--safe-area-top) - var(--safe-area-bottom));
  }

  /* Fix for filter toggle button placement */
  .filterToggleButton {
    top: var(--safe-area-top);
  }

  /* Make sure mobile cards have proper padding to avoid notch */
  .mobileCardView {
    padding-left: max(var(--safe-area-left), 8px);
    padding-right: max(var(--safe-area-right), 8px);
  }
  
  /* Ensure modals don't get cut off by the notch */
  .modalContent {
    margin-top: var(--safe-area-top);
    max-height: calc(100vh - var(--safe-area-top) - var(--safe-area-bottom) - 20px);
  }
}

/* Fix momentum scrolling for iOS */
.mobileCardView, .tableContainer, .modalContent, .optionsContainer, 
.formModal, .dataContainer, .modernSelectDropdown, .toggleGroup {
  -webkit-overflow-scrolling: touch;
} 