/* dataTable.module.css - Estilos compartilhados para telas de listagem */
:root {
  --primary-color: #00ff85;
  --primary-rgb: 0, 255, 133;
  --secondary-color: #1A1B23;
  --background: #121212;
  --card-background: #1A1B23;
  --input-bg: #2a2a2a;
  --hover-bg: #333333;
  --text-color: #ffffff;
  --text-secondary: #aaaaaa;
  --border-color: #444444;
  --border-hover: #666666;
  --error-color: #ff6b6b;
  --error-rgb: 255, 107, 107;
  --success-color: #00ff85;
  --success-rgb: 0, 255, 133;
  --warning-color: #ffb946;
  --warning-rgb: 255, 185, 70;
  --background-color: #13141B;
  --hover-color: #00E676;
  --gradient-start: #00FF85;
  --gradient-end: #80FFB9;
}

/* Container principal */
.pageContainer {
  padding: 24px;
  min-height: 100vh;
  background-color: var(--background-color);
  width: 100%;
  padding: 20px;
  max-width: 1400px;
  margin: 0 auto;
}

/* Header da página */
.pageHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 24px;
}

.pageTitle {
  margin: 0;
  font-size: 28px;
  font-weight: 600;
  color: var(--primary-color);
}

.addButton {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 14px 24px;
  background-color: var(--secondary-color);
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
  border-radius: 12px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.addButton:hover {
  background-color: var(--primary-color);
  color: var(--secondary-color);
  transform: translateY(-2px);
  box-shadow: 0 6px 16px rgba(0, 255, 133, 0.3);
}

.addButton:active {
  transform: translateY(0);
}

/* Container principal de dados */
.dataContainer {
  background-color: var(--card-background);
  border-radius: 12px;
  padding: 24px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  border: 1px solid var(--border-color);
  margin-bottom: 32px;
  overflow: hidden;
}

/* Container de filtros */
.filtersContainer {
  padding: 24px;
  border-bottom: 1px solid var(--border-color);
  background-color: transparent;
  display: flex;
  flex-wrap: wrap;
  gap: 16px;
}

.filterRow {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
  margin-bottom: 16px;
  align-items: center;
}

.filterGroup {
  display: flex;
  flex-direction: column;
  gap: 6px;
  min-width: 180px;
  flex: 1;
}

.filterLabel {
  display: flex;
  align-items: center;
  gap: 6px;
  font-size: 14px;
  font-weight: 500;
  color: var(--text-color);
  margin-bottom: 4px;
}

.filterLabel svg {
  color: var(--primary-color);
  font-size: 14px;
}

/* Select moderno */
.modernSelect {
  position: relative;
  background-color: var(--input-bg);
  border: 1px solid var(--border-color);
  border-radius: 6px;
  padding: 10px 12px;
  cursor: pointer;
  user-select: none;
  max-width: 100%;
  height: 44px;
  display: flex;
  align-items: center;
}

.modernSelect:hover {
  border-color: var(--border-hover);
}

.modernSelect.active {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 1px var(--primary-color);
}

.modernSelectHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  font-size: 14px;
  color: var(--text-color);
}

.arrow {
  font-size: 10px;
  color: var(--text-secondary);
}

.modernSelectDropdown {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background-color: var(--card-background);
  border: 1px solid var(--border-color);
  border-radius: 6px;
  margin-top: 4px;
  max-height: 300px;
  overflow-y: auto;
  z-index: 100;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  padding: 8px 0;
}

.modernCheckboxLabel {
  display: flex;
  align-items: center;
  padding: 10px 14px;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.modernCheckboxLabel:hover {
  background-color: var(--hover-bg);
}

.modernCheckbox {
  position: relative;
  width: 18px;
  height: 18px;
  margin-right: 10px;
}

.hiddenCheckbox {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.customCheckbox {
  position: absolute;
  top: 0;
  left: 0;
  height: 18px;
  width: 18px;
  background-color: var(--input-bg);
  border-radius: 4px;
  border: 1px solid var(--border-color);
}

.hiddenCheckbox:checked ~ .customCheckbox {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}

.hiddenCheckbox:checked ~ .customCheckbox:after {
  content: "";
  position: absolute;
  left: 6px;
  top: 2px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

/* Campo de busca */
.searchField {
  position: relative;
  height: 44px;
  min-width: 250px;
  flex: 2;
}

.searchInput {
  padding: 10px 12px 10px 38px;
  border: 1px solid var(--border-color);
  border-radius: 6px;
  background-color: var(--input-bg);
  width: 100%;
  font-size: 14px;
  height: 44px;
  color: var(--text-color);
}

.searchInput:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 1px var(--primary-color);
}

.searchIcon {
  position: absolute;
  left: 12px;
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-secondary);
  font-size: 16px;
  pointer-events: none;
}

/* Botão de fixos e filtros especiais */
.recurringButton {
  display: flex;
  align-items: center;
  gap: 6px;
  background-color: var(--input-bg);
  color: var(--text-color);
  border: 1px solid var(--border-color);
  border-radius: 6px;
  padding: 0 16px;
  font-size: 14px;
  cursor: pointer;
  transition: background-color 0.2s;
  height: 44px;
  min-width: 95px;
  white-space: nowrap;
}

.recurringButton svg {
  color: var(--primary-color);
}

.recurringButton:hover {
  background-color: var(--hover-bg);
}

.recurringButton.active {
  background-color: rgba(var(--primary-rgb), 0.1);
  border-color: var(--primary-color);
  color: var(--primary-color);
}

/* Tabela de dados */
.tableContainer {
  display: block; /* Ensure it's visible on desktop */
  width: 100%;
  overflow-x: auto;
}

.table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
  color: var(--text-color);
}

.table th {
  background-color: transparent;
  padding: 16px;
  text-align: left;
  font-weight: 600;
  color: var(--text-secondary);
  position: sticky;
  top: 0;
  font-size: 14px;
  letter-spacing: 0.5px;
  text-transform: uppercase;
  border-bottom: 1px solid var(--border-color);
}

.table td {
  padding: 16px;
  border-bottom: 1px solid rgba(42, 43, 51, 0.5);
  transition: all 0.2s ease;
  font-size: 15px;
}

.tableRow {
  transition: background-color 0.2s ease;
}

.tableRow:hover {
  background-color: rgba(var(--primary-rgb), 0.03);
}

.tableRow.selected {
  background-color: rgba(0, 255, 133, 0.05);
}

/* Coluna de ações */
.actionButtons {
  display: flex;
  gap: 8px;
}

.actionButton {
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  padding: 6px;
  border-radius: 4px;
  transition: all 0.2s ease;
}

.actionButton:hover {
  color: var(--primary-color);
  background-color: rgba(0, 255, 133, 0.1);
}

.actionButton.delete:hover {
  color: var(--error-color);
  background-color: rgba(255, 107, 107, 0.1);
}

/* Checkbox customizado */
.checkboxContainer {
  display: block;
  position: relative;
  padding-left: 0;
  cursor: pointer;
  font-size: 22px;
  user-select: none;
  width: 18px;
  height: 18px;
}

.checkbox {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 18px;
  width: 18px;
  background-color: var(--input-bg);
  border-radius: 4px;
  border: 1px solid var(--border-color);
}

.checkboxContainer:hover .checkmark {
  background-color: var(--hover-bg);
}

.checkboxContainer input:checked ~ .checkmark {
  background-color: var(--primary-color);
}

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

.checkboxContainer input:checked ~ .checkmark:after {
  display: block;
}

.checkboxContainer .checkmark:after {
  left: 6px;
  top: 2px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

/* Status de tipo */
.typeStatus {
  display: inline-flex;
  align-items: center;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 13px;
  font-weight: 600;
  gap: 6px;
}

.fixedType {
  background-color: rgba(0, 255, 133, 0.1);
  color: var(--primary-color);
}

.oneTimeType {
  background-color: rgba(255, 255, 255, 0.1);
  color: var(--text-color);
}

.installmentsType {
  background-color: rgba(89, 143, 255, 0.1);
  color: #598FFF;
}

/* Mensagem de sem dados */
.noDataContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 40px 20px;
  text-align: center;
}

.noDataIcon {
  font-size: 48px;
  color: var(--text-secondary);
  margin-bottom: 16px;
}

.noDataMessage {
  font-size: 20px;
  font-weight: 500;
  color: var(--text-color);
  margin: 0 0 8px 0;
}

.noDataSuggestion {
  color: var(--text-secondary);
  margin-bottom: 24px;
}

.noDataActions {
  display: flex;
  gap: 16px;
}

/* Modal de confirmação */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: fadeIn 0.2s ease;
}

.modalContent {
  background-color: var(--card-background);
  border-radius: 16px;
  padding: 24px;
  width: 100%;
  max-width: 500px;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
  animation: slideUp 0.3s ease;
  border: 1px solid var(--border-color);
  margin-bottom: 15%;
}

@keyframes slideUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

.modalHeader {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 16px;
  padding-bottom: 16px;
  border-bottom: 1px solid var(--border-color);
}

.modalHeader svg {
  color: var(--primary-color);
  font-size: 24px;
}

/* Manter a cor vermelha apenas para ícones de erro/alerta */
.modalHeader svg.warning-icon {
  color: var(--error-color);
}

.modalHeader h3 {
  margin: 0;
  font-size: 20px;
  font-weight: 600;
  color: var(--text-color);
}

.modalBody {
  margin-bottom: 24px;
}

.modalMessage {
  font-size: 16px;
  color: var(--text-secondary);
  line-height: 1.5;
  margin-bottom: 16px;
}

.modalActions {
  display: flex;
  justify-content: flex-end;
  gap: 16px;
  margin-top: 24px;
}

.cancelButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: 0 20px;
  background-color: var(--input-bg);
  border: 1px solid var(--border-color);
  color: var(--text-color);
  border-radius: 6px;
  font-size: 15px;
  cursor: pointer;
  transition: all 0.2s ease;
  height: 40px;
}

.cancelButton:hover {
  background-color: var(--card-background);
  border-color: var(--text-color);
}

.confirmButton {
  padding: 12px 20px;
  background-color: var(--secondary-color);
  border: 2px solid var(--error-color);
  color: var(--error-color);
  border-radius: 12px;
  font-size: 15px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 8px;
}

.confirmButton:hover {
  background-color: var(--error-color);
  color: var(--secondary-color);
}

/* Adicionando estilos para badges de valor para despesas e receitas */
.amountBadge {
  padding: 4px 8px;
  border-radius: 4px;
  font-weight: 500;
  display: inline-flex;
  align-items: center;
}

.incomeAmount {
  background-color: rgba(0, 255, 133, 0.1);
  color: var(--primary-color);
}

.expenseAmount {
  background-color: rgba(255, 107, 107, 0.1);
  color: var(--error-color);
}

/* Estilos para componentes específicos de receita/despesa */
.valuePositive {
  color: var(--primary-color);
  font-weight: 500;
}

.valueNegative {
  color: var(--error-color);
  font-weight: 500;
}

/* Responsividade para dispositivos móveis */
@media (max-width: 768px) {
  .pageContainer {
    padding: 12px;
  }
  
  .pageHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: 16px;
    margin-bottom: 24px;
  }
  
  .pageTitle {
    font-size: 24px;
    margin-bottom: 8px;
  }
  
  .addButton {
    width: 100%;
    justify-content: center;
    padding: 12px;
  }
  
  .filtersContainer {
    padding: 16px 12px;
  }
  
  .filterRow {
    flex-direction: column;
    gap: 12px;
    width: 100%;
  }
  
  .filterGroup {
    width: 100%;
    min-width: 100%;
  }
  
  .searchField {
    min-width: auto;
    width: 100%;
  }
  
  .modernSelectHeader {
    padding: 10px 12px;
  }
  
  /* Improved table responsiveness */
  .tableContainer {
    overflow-x: auto;
    margin: 0 -12px;
    padding: 0 12px;
    width: calc(100% + 24px);
  }
  
  .table {
    min-width: 700px; /* Ensures table won't shrink too much */
  }
  
  .table th, 
  .table td {
    padding: 12px 8px;
    font-size: 14px;
  }
  
  .typeStatus {
    padding: 4px 8px;
    font-size: 12px;
  }
  
  .actionButtons {
    flex-direction: row;
    gap: 4px;
  }
  
  .actionButton {
    padding: 6px;
    font-size: 14px;
  }
  
  .modalContent {
    width: 95%;
    padding: 16px;
    max-height: 90vh;
    overflow-y: auto;
  }
  
  /* Collapsible filter section */
  .filtersToggle {
    display: flex;
    align-items: center;
    gap: 8px;
    width: 100%;
    padding: 12px;
    background-color: var(--card-background);
    border: 1px solid var(--border-color);
    border-radius: 6px;
    color: var(--text-color);
    font-size: 14px;
    margin-bottom: 12px;
    cursor: pointer;
  }
  
  .filtersToggle svg {
    color: var(--primary-color);
  }
  
  .filtersCollapsed {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
    padding: 0;
    margin: 0;
    border-bottom: none;
  }
  
  .filtersExpanded {
    max-height: 1000px;
    transition: max-height 0.5s ease;
  }
  
  /* Improved mobile layout for delete confirmation modal */
  .optionsContainer {
    padding: 12px;
  }
  
  .optionsList {
    gap: 8px;
  }
  
  .optionItem {
    padding: 10px;
  }
}

@media (max-width: 480px) {
  .pageContainer {
    padding: 10px;
  }
  
  .pageTitle {
    font-size: 22px;
  }
  
  .dataContainer {
    padding: 16px 12px;
  }
  
  .table th, 
  .table td {
    padding: 10px 4px;
    font-size: 13px;
  }
  
  .table th:nth-child(5),
  .table td:nth-child(5),
  .table th:nth-child(6),
  .table td:nth-child(6) {
    display: none; /* Hide less important columns on very small screens */
  }
  
  .typeStatus {
    padding: 3px 6px;
    font-size: 12px;
  }
  
  .amountBadge {
    padding: 3px 6px;
    font-size: 12px;
  }
  
  .modalHeader h3 {
    font-size: 18px;
  }
  
  .modalMessage {
    font-size: 14px;
  }
  
  .modalActions {
    flex-direction: column;
    gap: 8px;
  }
  
  /* Improved display of the filter dropdowns */
  .modernSelectDropdown {
    max-height: 250px;
    width: 100%;
  }
}

/* Additional style for mobile-friendly filter toggle button */
.filterToggleButton {
  display: none;
  align-items: center;
  justify-content: center;
  gap: 8px;
  width: 100%;
  padding: 12px;
  background-color: var(--card-background);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  color: var(--text-color);
  font-size: 15px;
  margin-bottom: 16px;
  cursor: pointer;
  transition: all 0.2s ease;
  position: sticky;
  top: 0;
  z-index: 20;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
}

.filterToggleButton:hover {
  background-color: var(--hover-bg);
}

.filterToggleButton svg {
  color: var(--primary-color);
  font-size: 16px;
}

@media (max-width: 768px) {
  .filterToggleButton {
    display: flex;
    position: sticky;
    top: 0;
    margin-top: -8px;
    margin-bottom: 16px;
  }
  
  .dataContainer {
    padding-top: 8px;
  }
  
  .filtersCollapsed {
    display: none;
    max-height: 0;
    overflow: hidden;
  }
  
  .filtersExpanded {
    display: flex;
    flex-direction: column;
    max-height: 80vh;
    overflow-y: auto;
  }
}

/* Form Styles for EditIncomeForm and similar forms */
.formModal {
  max-width: 700px;
  width: 100%;
  max-height: none; /* Removendo limitação de altura */
  margin-bottom: 15%;
  margin-top: auto;
}

.formGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));  
  width: 100%;
  margin-top: auto;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 8px;
  position: relative;
}

.formGroupTeste {
  display: flex;
  flex-direction: row;
  gap: 8px;
  position: relative;
  align-items: center;
  justify-content: center;
}

.formGroupRow {
  display: flex;
  gap: 16px;
}

.formGroupHalf {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.formLabel {
  font-size: 14px;
  font-weight: 500;
  color: var(--text-secondary);
  display: flex;
  align-items: center;
  gap: 6px;
}

.formInput {
  padding: 10px 14px;
  border-radius: 6px;
  background-color: var(--input-bg);
  border: 1px solid var(--border-color);
  color: var(--text-color);
  width: 100%;
  height: 48px;
  font-size: 15px;
  transition: all 0.2s ease;
}

.formInput:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(0, 255, 133, 0.1);
}

.inputWithIcon {
  position: relative;
}

.inputIcon {
  position: absolute;
  left: 16px;
  top: 50%;
  transform: translateY(-50%);
  color: var(--primary-color);
  font-size: 16px;
}

.inputWithIcon .formInput {
  padding-left: 40px;
}

.errorCard {
  background-color: rgba(255, 107, 107, 0.1);
  border-radius: 12px;
  padding: 12px 16px;
  margin-bottom: 24px;
  border-left: 4px solid var(--error-color);
  display: flex;
  align-items: center;
  gap: 12px;
  justify-content: space-between;
}

.errorCard > div:first-child {
  display: flex;
  align-items: center;
  gap: 12px;
  flex: 1;
}

.errorIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  min-width: 24px;
  background-color: var(--error-color);
  color: var(--secondary-color);
  border-radius: 50%;
  font-weight: bold;
  font-size: 16px;
}

.errorMessage {
  color: var(--error-color);
  font-weight: 500;
  margin: 0;
  font-size: 14px;
}

.errorRetryButton {
  background-color: transparent;
  border: 1px solid var(--error-color);
  color: var(--error-color);
  padding: 6px 10px;
  border-radius: 6px;
  font-size: 14px;
  cursor: pointer;
  transition: all 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  min-width: 120px;
  height: 36px;
  margin-left: 12px;
  flex-shrink: 0;
}

.errorRetryButton:hover {
  background-color: var(--error-color);
  color: white;
}

.emptySelectError {
  padding: 12px 16px;
  background-color: rgba(255, 107, 107, 0.1);
  border: 1px dashed var(--error-color);
  color: var(--error-color);
  border-radius: 6px;
  font-size: 14px;
  display: flex;
  align-items: center;
  height: 48px;
}

/* Additional responsive helper classes */
.responsiveHideOnMobile {
  display: block;
}

@media (max-width: 768px) {
  .responsiveHideOnMobile {
    display: none !important;
  }
}

/* Mobile card view container */
.mobileCardView {
  display: none !important; /* Ensure it's hidden on desktop */
  flex-direction: column;
  gap: 16px;
  width: 100%;
  margin-bottom: 24px;
}

/* Table container for desktop view */
.tableContainer {
  display: block; /* Ensure it's visible on desktop */
  width: 100%;
  overflow-x: auto;
}

/* Media query for mobile devices */
@media (max-width: 768px) {
  .mobileCardView {
    display: flex !important; /* Force display on mobile */
  }
  
  .tableContainer {
    display: none !important; /* Force hide on mobile */
  }
}

/* Estilos para gestos touch nos cards mobile */
.mobileCard {
  position: relative;
  overflow: hidden;
  transition: transform 0.3s ease, background-color 0.2s ease;
  cursor: pointer;
  touch-action: pan-y;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  background-color: var(--card-background);
  border-radius: 12px;
  border: 1px solid var(--border-color);
  padding: 16px;
}

.mobileCard:active {
  background-color: rgba(var(--primary-rgb), 0.1);
  transform: scale(0.98);
}

.mobileCardSwipeActions {
  position: absolute;
  top: 0;
  right: -160px;
  width: 160px;
  height: 100%;
  display: flex;
  transition: right 0.3s ease;
}

.mobileCardSwipeEdit,
.mobileCardSwipeDelete {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 80px;
  height: 100%;
  color: white;
  font-weight: 600;
}

.mobileCardSwipeEdit {
  background-color: rgba(var(--primary-rgb), 0.8);
}

.mobileCardSwipeDelete {
  background-color: rgba(var(--error-rgb), 0.8);
}

.mobileCardSwipeState {
  transition: transform 0.3s ease;
}

.mobileCardSwipeActive .mobileCardSwipeState {
  transform: translateX(-160px);
}

.mobileCardSwipeActive .mobileCardSwipeActions {
  right: 0;
}

/* Botão para mostrar mais detalhes no card */
.mobileCardDetailToggle {
  width: 100%;
  padding: 10px;
  background-color: transparent;
  border: none;
  border-top: 1px solid var(--border-color);
  color: var(--text-secondary);
  font-size: 14px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  margin-top: 12px;
  cursor: pointer;
}

.mobileCardDetailToggle:hover,
.mobileCardDetailToggle:focus {
  color: var(--primary-color);
}

/* Animation for touch feedback */
@keyframes touchPulse {
  0% { transform: scale(1); }
  50% { transform: scale(0.98); }
  100% { transform: scale(1); }
}

.touchPulse {
  animation: touchPulse 0.3s ease;
}

/* Optimization for touch devices */
@media (hover: none) {
  .actionButton,
  .mobileCardActionButtons button {
    padding: 10px;
    min-width: 44px;
    min-height: 44px;
  }
}

.errorCard {
  background-color: rgba(255, 107, 107, 0.1);
  border-radius: 12px;
  padding: 12px 16px;
  margin-bottom: 24px;
  border-left: 4px solid var(--error-color);
  display: flex;
  align-items: center;
  gap: 12px;
  justify-content: space-between;
}

.errorCard > div:first-child {
  display: flex;
  align-items: center;
  gap: 12px;
  flex: 1;
}

.errorIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  min-width: 24px;
  background-color: var(--error-color);
  color: var(--secondary-color);
  border-radius: 50%;
  font-weight: bold;
  font-size: 16px;
}

.errorMessage {
  color: var(--error-color);
  font-weight: 500;
  margin: 0;
  font-size: 14px;
}

.errorRetryButton {
  background-color: transparent;
  border: 1px solid var(--error-color);
  color: var(--error-color);
  padding: 6px 10px;
  border-radius: 6px;
  font-size: 14px;
  cursor: pointer;
  transition: all 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  min-width: 120px;
  height: 36px;
  margin-left: 12px;
  flex-shrink: 0;
}

.errorRetryButton:hover {
  background-color: var(--error-color);
  color: white;
}

.emptySelectError {
  padding: 12px 16px;
  background-color: rgba(255, 107, 107, 0.1);
  border: 1px dashed var(--error-color);
  color: var(--error-color);
  border-radius: 6px;
  font-size: 14px;
  display: flex;
  align-items: center;
  height: 48px;
}

/* Improve toggle button styles */
.toggleGroup {
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
  width: 100%;
}

.toggleButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 16px;
  min-width: 100px;
  height: 48px;
  background-color: var(--input-bg);
  border: 1px solid var(--border-color);
  cursor: pointer;
  transition: all 0.2s ease;
  color: var(--text-color);
  border-radius: 6px;
  font-size: 14px;
  gap: 8px;
}

.toggleButton svg {
  color: var(--primary-color);
  font-size: 16px;
}

.toggleButton:hover {
  background-color: rgba(255, 255, 255, 0.05);
  border-color: var(--primary-color);
  color: var(--text-color);
}

.toggleButton.active {
  background-color: var(--secondary-color);
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
  font-weight: 600;
}

.formButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 12px 24px;
  border-radius: 8px;
  font-size: 16px;
  font-weight: 500;
  gap: 8px;
  cursor: pointer;
  transition: all 0.2s ease;
  min-width: 150px;
  border: none;
}

.formCancel {
  background-color: var(--card-background);
  border: 1px solid var(--border-color);
  color: var(--text-color);
}

.formCancel:hover {
  background-color: rgba(255, 255, 255, 0.05);
  border-color: var(--error-color);
  color: var(--error-color);
}

.formSubmit {
  background-color: var(--primary-color);
  color: var(--secondary-color);
}

.formSubmit:hover {
  background-color: var(--hover-color);
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.formSubmit:disabled {
  opacity: 0.7;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

/* Additional mobile optimizations for form elements */
@media (max-width: 768px) {
  .formModal {
    padding: 16px;
    max-width: 100%;
    width: 100%;
    height: 100%;
    border-radius: 0;
    overflow-y: auto;
  }

  .formGrid {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  /* Make toggle groups horizontally scrollable on mobile */
  .toggleGroup {
    display: flex;
    flex-wrap: nowrap;
    overflow-x: auto;
    gap: 8px;
    padding-bottom: 8px;
    width: 100%;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* IE and Edge */
  }
  
  .toggleGroup::-webkit-scrollbar {
    display: none; /* Chrome, Safari, Opera */
  }

  .toggleButton {
    min-width: auto;
    flex: 1 0 auto;
    white-space: nowrap;
    padding: 0 12px;
  }
  
  /* Make buttons inside toggleGroup have equal width */
  .formGroup:nth-child(3) .toggleButton,  /* Expense Type */
  .formGroup:nth-child(7) .toggleButton { /* Payment Method */
    flex: 1;
    text-align: center;
    justify-content: center;
  }

  .formButton {
    min-width: 0;
    flex: 1;
    padding: 12px 16px;
  }

  .modalActions {
    flex-direction: row;
    gap: 12px;
    justify-content: space-between;
    margin-top: 24px;
  }
  
  .formGroupRow {
    flex-direction: column;
    gap: 16px;
  }
  
  .formGroupHalf {
    width: 100%;
  }
}

@media (max-width: 480px) {
  /* Description and value in same line */
  .formGrid .formGroup:nth-child(1),
  .formGrid .formGroup:nth-child(2) {
    display: inline-block;
    vertical-align: top;
    width: calc(50% - 8px);
  }
  
  .formGrid .formGroup:nth-child(1) {
    margin-right: 16px;
  }
  
  .formGrid .formGroup:nth-child(2) {
    margin-right: 0;
  }
  
  .formGrid .formGroup:nth-child(3) {
    clear: both;
    width: 100%;
  }

  /* Even more specific toggle styling for small mobile */
  .toggleGroup {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    overflow-x: visible;
    margin: 0;
    padding: 0;
    width: 100%;
    justify-content: space-between;
    gap: 6px;
  }
  
  .toggleButton {
    flex: 1;
    min-width: 0;
    font-size: 13px;
    padding: 0 8px;
    height: 42px;
  }
  
  .toggleButton svg {
    font-size: 14px;
    margin-right: 4px;
  }
  
  /* Specific positioning for expense type buttons - MAKE IT MATCH PAYMENT METHOD */
  .formGroup:nth-child(3) .toggleGroup {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 6px 6px;
  }
  
  .formGroup:nth-child(3) .toggleButton {
    flex: 1 1 auto;
    width: 100%;
    min-width: 0;
    padding: 0 4px;
    font-size: 12px;
  }
  
  .formGroup:nth-child(3) .toggleButton svg {
    font-size: 13px;
    margin-right: 3px;
  }
  
  /* Specific positioning for payment method buttons */
  .formGroup:nth-child(7) .toggleGroup {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 6px 6px;
  }
}

.toggleButton.active {
  background-color: var(--secondary-color);
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
  font-weight: 600;
}

.inlineFieldsContainer {
  width: 100%;
}

@media (max-width: 480px) {
  .inlineFieldsContainer {
    display: flex;
    justify-content: space-between;
    gap: 16px;
  }
  
  .inlineFieldsContainer .formGroup {
    flex: 1;
    min-width: 0; /* Allows flex items to shrink below content size */
  }
  
  .inlineFieldsContainer .formInput {
    font-size: 14px;
  }
  
  .inlineFieldsContainer .inputIcon {
    font-size: 14px;
  }
} 